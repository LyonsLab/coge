<TMPL_IF NAME="MAIN">
<SCRIPT language="JavaScript" type="text/javascript" src="./js/jquery.tablesorter.2.0.3.js"></SCRIPT>
<SCRIPT language="JavaScript">

$(document).ready(function(){
	$(".dialog_box").dialog({ autoOpen: false, width: 500 });

	//Object Generation
	var seqview = <TMPL_VAR NAME=SEQVIEW> || 0;
	if(seqview !=0){
		var featid = "<TMPL_VAR NAME=FEATID>";
		if ((featid) && (featid!=0)){
			seqObj = new generate_seq_obj(<TMPL_VAR NAME=DSID>,<TMPL_VAR NAME=DSGID>,<TMPL_VAR NAME=UPSTREAM>,<TMPL_VAR NAME=DOWNSTREAM>,seqview,'<TMPL_VAR NAME=CHR>',<TMPL_VAR NAME=RC>,featid);
		}
		else{
			seqObj = new generate_seq_obj(<TMPL_VAR NAME=DSID>,<TMPL_VAR NAME=DSGID>,<TMPL_VAR NAME=UPSTREAM>,<TMPL_VAR NAME=DOWNSTREAM>,seqview,'<TMPL_VAR NAME=CHR>',<TMPL_VAR NAME=RC>);
		}
	}
	//TODO - handle js object error when checking for value when it hasn't been instantiated
	else{
		seqObj = new Object();
	}

	get_seq('coge_radio');
	pageObj.waittime=1000;
	pageObj.tempdir="<TMPL_VAR NAME=TEMPDIR>";
	<TMPL_VAR NAME="document_ready">

	$("#tabs").tabs({selected:0}).show();

	$('#run_cogeblast_button').click(
		function() {
			reset_basename();
			generate_basefile(); //generate_basefile([],[update_basename]);
			blastOff();
		}
	);

	blast_param_on_select('coge_radio','coge');
	blast_param(); //blast_param([],[animate_params]);
	database_param(); //database_param([],['database']);
});

function generate_basefile() {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'generate_basefile',
		},
		success : function(data) {
			update_basename(data);
		},
	});
}

function blast_param(blast_type, translate, version) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'blast_param',
			blast_type: blast_type,
			translate: translate,
			version: version
		},
		success : function(data) {
			var obj = jQuery.parseJSON(data);
			animate_params(obj.html, obj.version, obj.pro);
		},
	});
}

function database_param(program) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'database_param',
			program: program,
		},
		success : function(data) {
			$('#database').html(data);
		},
	});
}

function generate_seq_obj(dsid,dsgid, upstream,downstream,seqview,chr,rc,featid) {
	this.featid=featid;
	this.dsid=dsid;
	this.dsgid=dsgid;
	this.upstream=upstream;
	this.downstream=downstream;
	this.seqview=seqview;
	this.chr=chr;
	this.rc=rc;
	this.gstid=<TMPL_VAR NAME=GSTID>;
}

function update_info_box(featid) {
	//generate_feat_info(['args__'+featid],['feature_info_popup']);
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'generate_feat_info',
			featid: featid,
		},
		success : function(data) {
			$('#feature_info_popup').html(data);
			$('#feature_info_popup').dialog('open');
		},
	});
}

function update_hsp_info (featid) {
	loading('image_info','Information');
	loading('query_image','Image');
	loading('subject_image','Image');
	//get_hsp_info(['args__blastfile','args__'+pageObj.basename,'args__num','args__'+featid],['image_info','query_image','subject_image']);
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'get_hsp_info',
			hsp_id: featid,
			blastfile: pageObj.basename
		},
		success : function(data) {
			var obj = jQuery.parseJSON(data);
			$('#image_info').html(obj.html);
			$('#query_image').html(obj.query_link);
			$('#subject_image').html(obj.subject_link);
			$('#result_visual_popup').dialog('open');
		},
	});
}

function loading(id,msg) {
	var message = '<font class="loading">Loading '+msg+' . . .</font>';
	$('#'+id).html(message);
}

// FIXME mdb 3/8/13 - instead of separate ajax requests, all HSP's should be handled in one
function fill_nearby_feats(id_array) { // mdb rewritten 3/8/13 issue 47
	//get_nearby_feats(['args__basefile','args__'+pageObj.basename,'args__num','args__'+id],[update_checkbox]);
	if (id_array.length) {
		var id = id_array.shift();
		$.ajax({
			data: {
				jquery_ajax: 1,
				fname: 'get_nearby_feats',
				basefile: pageObj.basename,
				num: id
			},
			success: function(data) {
				var obj = jQuery.parseJSON(data);
				update_checkbox(obj.name, obj.distance, obj.hsp_id, obj.new_checkbox_info);
			},
			complete : function() {
				setTimeout(
					function() {
						fill_nearby_feats(id_array);
					},
					0
				);
			}
		});
	}
	else { // all done, init table sorting
		init_table();
		init_table_opts();
		//$("#hsp_result_table").trigger("update");
	}
}

function click_all_feat_links() { // mdb rewritten 3/8/13 issue 47
	var link_array = pageObj.featlinks.split(',');
	var id_array = new Array();

	link_array.forEach(
		function(element, index, array) {
			if (element) {
				id_array.push(element);
			}
		}
	);

	fill_nearby_feats(id_array);
}

function update_checkbox(name, dist, hspid, id){
	$('#feat'+hspid).html(name);
	$('#dist'+hspid).html(dist);
	var id_array = new Array();
	if (id) {
		id_array = id.split(',');
		$('#checkbox'+id_array[0]).attr("id","checkbox"+id_array[1]);
		$('#'+id_array[0]).attr("value",id_array[1]).attr("id",id_array[1]);
	}
}

function overlap_checkboxes() {
	var action = $('#overlap_action').val();
	var accn="";
	$('#hsp_result_table :checkbox').each(function(){
		if (this.checked) {
			accn = accn + this.id+",";
		}
	});
	if (!accn || accn == ",") {
		alert("Please select one or more features.");
		return;
	}
	if (action == "gevo") {
		overlap_feats_parse(accn);
	}
	else if (action == "fasta"){
		export_fasta_file(accn);
	}
	else if (action == "seqview"){
		var locations = new Array();
		$('#hsp_result_table :checkbox').each(function(){
			if (this.checked) {
				var loc = $(this).parents('tr').find('.location').html();
				locations.push(loc);
			}
		});
		window.open("SeqView.pl?locations=" + locations.join(','));
	}
	else if (action == "phylo"){
		export_fasta_file(accn);
	}
	else if (action == "xls"){
		export_to_excel(accn, pageObj.basename);
	}
	else if(action == "tab"){
		generate_tab_deliminated(accn, pageObj.basename);
	}
	else if(action == "list"){
		generate_feat_list(accn, pageObj.basename);
	}
	else if(action == "blast"){
		generate_blast(accn, pageObj.basename);
	}
	else if(action == "hsp"){
		export_hsp_info();
	}
	else if (action == "CodeOn") {
		export_CodeOn(accn);
	}
	else {
		alert("Error: function missing '"+action+"'");
	}
}

function generate_blast(accn, filename) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'generate_blast',
			accn: accn,
			filename: filename,
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function generate_feat_list(accn, filename) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'generate_feat_list',
			accn: accn,
			filename: filename,
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function generate_tab_deliminated(accn, filename) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'generate_tab_deliminated',
			accn: accn,
			filename: filename,
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function export_to_excel(accn, filename) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'export_to_excel',
			accn: accn,
			filename: filename,
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function export_fasta_file(accn) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'export_fasta_file',
			accn: accn
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function export_CodeOn(accn) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'export_CodeOn',
			accn: accn
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function overlap_feats_parse(accn) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'overlap_feats_parse',
			accn: accn
		},
		success : function(data) {
			var obj = jQuery.parseJSON(data);
			if (obj) {
				if (obj.count > 10) {
					var remove = obj.count - 10;
					alert("You have exceeded the number of features you can send to GEvo ( 10 Max ). You currently have "+obj.count+" selected. Please uncheck "+remove+" of your checked item(s).");
				}
				else {
					window.open(obj.url);
				}
			}
		},
	});
}

function export_hsp_info() {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'export_hsp_info',
			filename: pageObj.basename
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function export_hsp_query_fasta() {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'export_hsp_query_fasta',
			filename: pageObj.basename
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function export_hsp_subject_fasta(dna) {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'export_hsp_subject_fasta',
			filename: pageObj.basename,
			dna: dna,
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function export_alignment_file() {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'export_alignment_file',
			filename: pageObj.basename,
		},
		success : function(data) {
			window.open(data);
		},
	});
}

function get_all_hsp_data() {
	export_hsp_info(); //export_hsp_info(['args__all','args__'+pageObj.basename],[export_file]);
}

function get_query_fasta() {
	export_hsp_query_fasta(); //export_hsp_query_fasta(['args__'+pageObj.basename],[export_file]);
}

function get_subject_fasta(val) {
	if (val) {
		export_hsp_subject_fasta(val); //export_hsp_subject_fasta(['args__'+pageObj.basename,'args__'+val],[export_file]);
	}
	else {
		export_hsp_subject_fasta(); //export_hsp_subject_fasta(['args__'+pageObj.basename],[export_file]);
	}
}

function get_alignment_file() {
	export_alignment_file(); //export_alignment_file(['args__'+pageObj.basename],[export_file]);
}

function enlarge_picture_window(id) {
	var html = $('#large_db'+id).html();
	html = html+'<br/>'+$('#large_pic'+id).html();
	$('#big_picture').html(html).dialog('open');
}

//TODO - clean this function up a bit
function show_seq(seq,name,num,dsid,chr,start,stop, rc) {
	if (num == 1) which_seq = "Query";
	else if (num == 2) which_seq = "Subject";
	else which_seq = "Alignment";
	if (seqObj){
		if (dsid == "seqObj") dsid = seqObj.dsid;
		if (chr == "seqObj") chr = seqObj.chr;
	}

	var html ="";
	hmtl =  html + "<TABLE width=100%><TR><TD valign='top' align='right'>"+which_seq+" Name: </TD><TD align=justify>"+name+"</TD></TR>";

	//*1 to make sure js sees integer
	if (stop*1 > start*1) {
		html = html + "<TR><TD valign='top' align='right'>"+which_seq+" Position: </TD><TD align=justify><pre>"+start+"-"+stop+"</pre></TD></TR>";
	}

	html = html + "<TR><TD valign='top' align='right'>"+which_seq+" Sequence: </TD><TD align=justify>"+seq+"</TD></TR></TABLE>";

	//check to see if SeqView is an option, then display link
	var regex = /^\d+$/;
	if (regex.test(dsid) && dsid != 0 && which_seq == "Subject") {
		var seqview = "SeqView.pl?dsid="+dsid+"&chr="+chr+"&start="+start+"&stop="+stop+"&rc="+rc;
		$('#sequence_popup').dialog('option','buttons',{"View Sequence in SeqView": function() { window.open(seqview); }});
	}
	$('#sequence_popup').html(html).dialog('open');
}

function get_params(){
	radio = get_radio("coge_radio","coge");
	var word_size = $('#word_size').val();
	var expect = $('#e_value').val();
	var match_mismatch = $('#match_score').val();
	var matrix = $('#matrix').val();
	var program = $('#'+radio).val();

	var gapcost;
	if (program == "blastn" || program == 'mega' || program == 'dcmega')
	{
		var num1 = match_mismatch.substr(0,1);
		var num2 = match_mismatch.substr(2);
		gapcost = $('#gapcosts_'+num1+num2).val();
	}
	else
	{
		gapcost = $('#gapcosts_'+matrix).val();
	}

	var filter_query = 0;
	if ($('#filter_query')[0].checked) {filter_query=1;}
	var reslimit = $('#resultslimit').val();
	//blastz parameters
	var zwordsize = $('#blastz_wordsize').val();
	var zgap_start = $('#blastz_gap_start').val();
	var zgap_extension = $('#blastz_gap_extension').val();
	var zchaining = $('#blastz_chaining').val();
	var zthreshold = $('#blastz_threshold').val();
	var zmask = $('#blastz_mask').val();

	var comp = $('#comp_adj').val();
	var seq = $('#seq_box').val();
	return {w : word_size, e : expect,g : gapcost,p : program,mm: match_mismatch,m : matrix,c : comp,s : seq, zw : zwordsize, zgs : zgap_start, zge : zgap_extension, zc : zchaining, zt : zthreshold, zm : zmask, fq : filter_query, rl : reslimit};
}

function get_ncbi_params(){
	radio = get_radio("ncbi_radio","ncbi");
	var word_size = $('#ncbi_word_size').val();
	var expect = $('#ncbi_e_value').val();
	var db = $('#ncbi_db').val();
	var match_mismatch = $('#ncbi_match_score').val();
	if (match_mismatch)
	{
		var num1 = match_mismatch.substr(0,1);
		var num2 = match_mismatch.substr(2);
	}
	var gapcost = $('#ncbi_gapcosts_'+num1+num2).val();
	var job_title = $('#job_title').val();
	var program = $('#'+radio).val();

	var matrix = $('#ncbi_matrix').val();
	var comp = $('#ncbi_comp_adj').val();
	var seq = $('#seq_box').val();

	return {w : word_size, e : expect, db : db,g : gapcost,j : job_title,p : program,mm: match_mismatch,m : matrix,c : comp,s : seq};
}

function update_basename(basename){
	pageObj.basename=basename;
	//alert(pageObj.basename);
}

function reset_basename(){
	if(pageObj.basename) pageObj.basename=0;
}

function blastOff() {
	if (!pageObj.basename) {
		setTimeout("blastOff()", 100);
		return;
	}
	pageObj.waittime=1000;

	var check = $('#genome_choice').getLength();
	if (($('#blank').val())||(check==0)) {
		alert('You have not selected any genomes to blast.');
		$('#coge_blast').toggle();
		return;
	}

	var params = get_params();

	program = params.p;
	expect = params.e;
	job_title = params.j;
	word_size = params.w;
	comp = params.c;
	matrix = params.m
	match_score = params.mm;
	gapcost = params.g;
    seq = params.s;
    seq = seq.replace(/__/g,/_/);

    if (!seq.length) {
        alert('You have not specified a query sequence to blast.');
        return;
    }

	$('#blast_results').slideUp();
	$('#log_text').html('').slideDown();
	pageObj.nolog=1;
	setTimeout("monitor_log()", 1000);

	filter_query = params.fq;
	resultslimit = params.rl;

	//blastz params
	var zwordsize = params.zw;
	var zgap_start = params.zgs;
	var zgap_extension = params.zge;
	var zchaining = params.zc;
	var zthreshold = params.zt;
	var zmask = params.zm;

	var page_width = ($('#co').width())*(95/100);
	pageObj.image_width = page_width;
	var blastable_db = $('#genome_choice').getLength(1);

/*
	blast_search(
		[	'args__program','args__'+program,
			'args__expect','args__'+expect,
			'args__job_title','args__'+job_title,
			'args__wordsize','args__'+word_size,
			'args__comp','args__'+comp,
			'args__matrix','args__'+matrix,
			'args__matchscore','args__'+match_score,
			'args__gapcost','args__'+gapcost,
			'args__filter_query','args__'+filter_query,
			'args__resultslimit','args__'+resultslimit,
			'args__zwordsize','args__'+zwordsize,
			'args__zgap_start','args__'+zgap_start,
			'args__zgap_extension','args__'+zgap_extension,
			'args__zchaining','args__'+zchaining,
			'args__zthreshold','args__'+zthreshold,
			'args__zmask','args__'+zmask,
			'args__basename','args__'+pageObj.basename,
			'args__seq','args__'+seq,
			'args__blastable','args__'+blastable_db,
			'args__fid','args__'+<TMPL_VAR NAME='FEATID'>,
			'args__width','args__'+page_width,
			'args__color_hsps', 'color_by',
		],
		[blastresults],
		'POST'
	);
*/
	$.ajax({
		type: "POST",
		data: {
			jquery_ajax: 	1,
			fname:			'blast_search',
			program:		program,
			expect:			expect,
			job_title:		job_title,
			wordsize:		word_size,
			comp:			comp,
			matrix:			matrix,
			matchscore:		match_score,
			gapcost:		gapcost,
			filter_query:	filter_query,
			resultslimit:	resultslimit,
			zwordsize:		zwordsize,
			zgap_start:		zgap_start,
			zgap_extension:	zgap_extension,
			zchaining:		zchaining,
			zthreshold:		zthreshold,
			zmask:			zmask,
			basename:		pageObj.basename,
			seq:			seq,
			blastable:		blastable_db,
			fid:			'<TMPL_VAR NAME='FEATID'>',
			width:			page_width,
			color_hsps:		$('#color_by').val(),
		},
		success : function(data) {
			var obj = jQuery.parseJSON(data);
			blastresults(obj.html, obj.click_all_links);
		},
	});
}

function blastresults(html, click_all_links){
	$('#log_text').slideUp();
	pageObj.featlinks = click_all_links;
	$('#blast_results').html(html).slideDown('slow');
	if ( $('#null').html() == "null" ) {
		$('#result_toggle').hide();
		$('#result_features').hide();
		return;
	}
	else {
		var table_height = $('#hsp_result_table_body').height();
		var max_height = 400;
		if (table_height > max_height) $('#hsp_result_table_body').height(max_height);
	}
	setup_button_states();
	click_all_feat_links();
	check_display();
}

function init_table () {
	$.tablesorter.addParser({
		id: 'percent',
		is: function(s) { return false; },
		format: function(s) { return s.replace(/%/,''); },
		type: 'numeric'
	});

	$(function(){
		$("#hsp_result_table").tablesorter({
			//sortColumn: 'HSP#',				// Integer or String of the name of the column to sort by.
			sortClassAsc: 'headerSortUp',		// Class name for ascending sorting action to header
			sortClassDesc: 'headerSortDown',	// Class name for descending sorting action to header
			headerClass: 'header',				// Class name for headers (th's)
			widgets: ['zebra'],
			textExtraction: 'complex',
			headers: {0: {sorter: false},
			          7: {sorter: 'percent'},
			          9: {sorter: 'percent'},
			          11: {sorter: 'percent'}
			},
			//sortList: [[2,0],[5,0]], // mdb removed 3/8/13 - misleading if column 2 or 5 is hidden
		});
	});
}

//Need to instantiate this seperately from other dialog boxes, need to do this AFTER results are generated
function init_table_opts() {
	//substaniate dialog box
	$("#table_opts_dialog").dialog({ height: 240,
							width: 746,
							autoOpen: false,
	});

	//button effects on events
	$('#table_opts').click(function() {
		$('#table_opts_dialog').dialog('open');
	});
}

function ncbi_blast(url) {
	if (url == 1) {
		alert('You have not selected a BLAST program! Please select a program to run.');
	}
	else {
		var params = get_ncbi_params();
		seq = params.s;
		seq = seq.replace(/\n/,'%0D');
		db = params.db;
		expect = params.e;
		job_title = params.j;
		word_size = params.w;
		comp = params.c;
		matrix = params.m
		match_score = params.mm;

		url = url+'&DATABASE='+db+'&EXPECT='+expect+'&QUERY='+seq+'&JOB_TITLE='+job_title+'&WORD_SIZE='+word_size;

		if (program == 'blastn') {
			window.open(url+'&MATCH_SCORES='+match_score);
		}
		else {
			if ($('#comp_adj').is(':hidden')) {window.open(url+'&MATRIX_NAME='+matrix);}
			else {window.open(url+'&MATRIX_NAME='+matrix+'&COMPOSITION_BASED_STATISTICS='+comp);}
		}
	}
}

function update_gapcost(pro) {
    $('.gapcosts').hide();
    if(pro)
    {
      var val = $('#matrix').val();
      $('#gapcosts_'+val).toggle();
    }
    else
    {
      var str = $('#match_score').val();
      var num1 = str.substr(0,1);
      var num2 = str.substr(2);
      $('#gapcosts_'+num1+num2).toggle();
    }
}

function update_gapcost_ncbi(pro) {
    $('.ncbi_gapcosts').hide();
    if(pro)
    {
      var val = $('#ncbi_matrix').val();
      $('#ncbi_gapcosts_'+val).toggle();
    }
    else
    {
      var str = $('#ncbi_match_score').val();
      var num1 = str.substr(0,1);
      var num2 = str.substr(2);
       $('#ncbi_gapcosts_'+num1+num2).toggle();
    }
}

$.fn.getLength = function(val){
  var opt_length;
  var blastable;
  var blanked=0; //otherwise get math problems later...boo javascript
  this.each(
  	function()
  	{
  		var opts = this.options;
  		opt_length = opts.length;
  		if (opt_length == 0) {return opt_length;}
  		blastable = opts[0].id;
		if (blastable == 'blank') {blanked++;} //Counts the number of instances of blank
  		if (val){
  		  for(var i=1;i<opts.length;i++) //>
	  	  {
	  		blastable += ","+opts[i].id;
	  		//need to chopoff last comma
	  	  }
  		}
  	}
  );
  if(val) return blastable;
  if (blanked) {opt_length-=blanked;} //subtract elements that are classified as blank above
  return opt_length;
};

$.fn.sortSelect = function(){
  this.each(
	  function()
	  {
	  	if(this.nodeName.toLowerCase() != "select"){
	  	  return;}
	  	var opts = this.options;
	  	var sortArray = [];
	  	for(var i=0;i<opts.length;i++) //>
	  	{
	  		sortArray[i] = {
	  				v: opts[i].value,
	  				t: opts[i].text,
	  				d: opts[i].id,
	  				}
	  	}
	  	sortArray.sort(
	  			function(obj1,obj2)
	  			{
	  				obj1t = obj1.t.toLowerCase(),
	  				obj2t = obj2.t.toLowerCase();
	  				if(obj1t == obj2t){
	  				  return 0;}
	  				return obj1t < obj2t ? -1 : 1; //>
	  			}
	  	);
	  	for(var i=0;i<opts.length;i++) //>
	  	{
	  		opts[i].id = sortArray[i].d;
	  		opts[i].text = sortArray[i].t;
	  		opts[i].value = sortArray[i].v;
	  	}
	  }
	);
	return this;
};

function select_blast() {
	var radio = get_radio('ncbi_radio','ncbi');
	//get_url([radio],[ncbi_blast]);
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'get_url',
			program: $('#'+radio).val()
		},
		success : function(data) {
			ncbi_blast(data);
		},
	});
}

function get_radio(which_type,val){
	if ($('#'+which_type)[0].checked) { return val+"_blast_type_n"; }
	else { return val+"_blast_type_p"; }
}

function get_seq(which_type) {
	dsid = seqObj.dsid;
	dsgid = seqObj.dsgid;
	featid = seqObj.featid;
	chr = seqObj.chr;
        var program = get_radio(which_type,"coge");
	if (featid) {
		$('#seq_box').val('Loading ...');
		$.ajax({
			data: {
				jquery_ajax: 1,
				fname: 'get_sequence',
				fid: featid,
				blast_type: program,
				upstream: seqObj.upstream,
				downstream: seqObj.downstream,
				rc: seqObj.rc,
				gstid: seqObj.gstid
			},
			success : function(html) {
				$('#seq_box').val(html);
			},
		});
	}
	else if (chr) {
		$('#seq_box').val('Loading ...');
		$.ajax({
			data: {
				jquery_ajax: 1,
				fname: 'get_sequence',
				dsid: dsid,
				dsgid: dsgid,
				blast_type: program,
				start: seqObj.upstream,
				stop: seqObj.downstream,
				gstid: seqObj.gstid
			},
			success : function(html) {
				$('#seq_box').val(html);
			},
		});
	}
	else if ('<TMPL_VAR NAME=LOCATIONS>') {
		$('#seq_box').val('Loading ...');
		$.ajax({
			data: {
				jquery_ajax: 1,
				fname: 'get_sequence',
				blast_type: program,
				locations: '<TMPL_VAR NAME=LOCATIONS>'
			},
			success : function(html) {
				$('#seq_box').val(html);
			},
		});
	}
	else {
		//$('#seq_box').val('');
		//return;
	}
}

function blast_param_on_select(which_type, val) {
	radio = get_radio(which_type, val);
	program = $('#'+radio).val();
	database_param(program); //database_param([radio], ['database']);

	$('#blast_parameters').hide();
	$('#blastz_parameters').hide();

	if (program == 'lastz') {
		$('#blastz_parameters').toggle();
	}
	else {
		$('#blast_parameters').toggle();
		if ((program == 'blastx') || (program == 'tblastx')) {
			blast_param("blast_type_p", 1, which_type); //blast_param(['args__blast_type','args__'+"blast_type_p",'args__translate','args__1','args__version','args__'+which_type],[animate_params]);
			$('#word_size').val(3);
		}
		else if ((program == 'blastp') || (program == 'tblastn')) {
			blast_param("blast_type_p", 0, which_type); //blast_param(['args__blast_type','args__'+"blast_type_p",'args__version','args__'+which_type],[animate_params]);
			$('#word_size').val(3);
		}
		else {
			blast_param('', 0, which_type); //blast_param(['args__version','args__'+which_type],[animate_params]);
			if (program == "dcmega") {
				$('#word_size').val(11);
			}
			else {
				$('#word_size').val(8);
			}
		}
	}
}

function animate_params (html,version,pro){
	if(version == "coge_radio") {
		$('#pro_or_nu_param').hide(0).html(html).toggle();
		update_gapcost(pro);
	}
	else{
		$('#ncbi_pro_or_nu_param').hide(0).html(html).toggle();
		update_gapcost_ncbi(pro);
	}
}

function org_search(desc_search){
	if (pageObj.time) {
		clearTimeout(pageObj.time);
	}

	name_desc = $('#org_name_desc').val();
	if (name_desc.length < 3) { return; } //>

	pageObj.time = setTimeout(
		function() {
			$("#wait_indicator").css({opacity:1});
			$.ajax({
				data: {
					jquery_ajax: 1,
					fname: 'get_orgs',
					name_desc: name_desc,
					timestamp: new Date().getTime()
				},
				success : function(data) {
					var items = jQuery.parseJSON(data);
					if (!pageObj.timestamp_get_orgs || items.timestamp > pageObj.timestamp_get_orgs) {
						pageObj.timestamp_get_orgs = items.timestamp;
						$("#wait_indicator").animate({opacity:0});
						$('#org_id').html(items.html);
						seq_type_search();
						update_buttons();
						count_organisms();
					}
				}
			});
		},
		500
	);
}

function adjust_blast_types(val){
	if(val == 1){
		if($('#ncbi_blast_type').is(":hidden")){
			$('#coge_blast_type').hide(0);
			$('#ncbi_blast_type').show(0);
			get_seq('ncbi_radio');
		}
		else return;
	}
	else{
		if($('#coge_blast_type').is(":hidden")){
			$('#coge_blast_type').show(0);
			$('#ncbi_blast_type').hide(0);
			get_seq('coge_radio');
		}
		else return;
	}
}

function matrix_view (){
	var matrix = $('#matrix').val();
	window.open('MatrixView.pl?matrix='+matrix);
}

function monitor_log(log)
{
  var fasta = "";
  var blast = 0;
  var results = 0;
  var done = 0;
  var match;
  pageObj.finished = 0;
  if (log) {
  /*

   if (log.match(/Finished!/))
    {
     database = database+"done!\n";
     pageObj.finished = 1;
    }

   match=log.match(/fasta/i);
  if (match && match[0])
   {
     match.reverse();
     sequence = "Generating "+match[0]+". . .";
   }
   match=log.match(/running\s+(\(.*?\))/g);
   if (match && match[0]) {
     sequence = sequence +"done!<br/>";
     match.reverse();
     val = match[0];
     if (!val) val = "";
     algo = "Alignment algorithm "+val+". . .";
   }

   match=log.match(/image\s+(\(.*?\))/g);
   if (match && match[0]) {
     algo = algo+"done!<br/>";
     match.reverse();
     val = match[0];
     if (!val) val = "";
     image = "Rendering "+val+". . .";
   }
   if (log.match(/database/)) {
     image = image+"done!<br/>";
     database = "Generating annotation database. . .";
   }
  }
  */
  //match=log.match(/\*\s+fasta\sfile/);
  if(log.match(/\*\s+fasta\sfile/i))
  {
  	fasta="Generating blastable databases . . . <br/>";
  	match=log.match(/\*(.+)\*\sblastdb/g);
  	if(match)
  	{
  		var crappy_workaround;
  		for (i=0;i<match.length;i++) //>
  		{
  			crappy_workaround = match[i].match(/\*(.+)\*/);
  			fasta += "&nbsp;&nbsp;&nbsp;"+crappy_workaround[1]+" database built!<br/>";
  		}
  	}
  }

    if(log.match(/running/i))
  {
  	fasta += "Blastable databases generation done!<br/>";
  	var blast_program = log.match(/-p\s(\w+)\s/);
	if (!blast_program)
	  {
	    blast_program = log.match(/(lastz)/);
	  }
  	blast="Running blast algorithm . . . <br/>";

  	match=log.match(/\*(.+)\*\sblast\sanalysis\scomplete/g);
  	if(match)
  	{
  		var crappy_workaround;
  		for (i=0;i<match.length;i++) //>
  		{
  			crappy_workaround = match[i].match(/\*(.+)\*/);
  			blast += "&nbsp;&nbsp;&nbsp;"+crappy_workaround[1]+" complete!<br/>";
  		}
  	}
  }

  if(log.match(/Results/i)) {
  	blast += "Analysis complete!<br/>";
  	results = "Collating results. . . ";
  }
  if (log.match(/Finished/i)) {
    results += "done!<br/>";
    done = "Displaying results.  This may take your browser some time to process the HSP table.  Please be patient."

    pageObj.finished = 1;
   }

  }

  else {pageObj.nolog += 1;}
  var message = "Initializing search . . . ";

  if (fasta) message += "done!<br/>"+fasta;
  if (blast) message += blast;
  if (results) message = results;
  if (done) message += done;

  if (!pageObj.finished && pageObj.nolog<8) //>
  {
    var waittime = pageObj.waittime;
    pageObj.waittime = pageObj.waittime*2;
    message+="<br/>Next progress check in "+waittime/1000+" seconds.";
    setTimeout(read_log, waittime); //setTimeout("read_log(['args__logfile', 'args__'+pageObj.basename, 'args__tempdir', 'args__'+pageObj.tempdir], [monitor_log])",waittime);
  }
  if (message) {
  	$('#log_text').html(message);
  	var height = $('#log_text')[0].scrollHeight;
    $("#log_text").animate({ scrollTop: height}, 500);
  }
}

function read_log() {
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'read_log',
			logfile: pageObj.basename,
			tempdir: pageObj.tempdir,
		},
		success : function(data) {
			monitor_log(data);
		},
	});
}

function toggle_hsp_column(index) {
	show = 0;
	//console.log ($('#show_columns td:eq('+(1*index-1)+')').html());
	if ($('#show_columns td:eq('+(1*index-1)+')').children()[0] && $('#show_columns td:eq('+(1*index-1)+')').children()[0].checked) { show=1; }
	if (show) {
		$('#hsp_result_table td:nth-child('+(1*index+1)+')').show();
		$('#hsp_result_table th:nth-child('+(1*index+1)+')').show();
	}
	else {
		$('#hsp_result_table td:nth-child('+(1*index+1)+')').hide();
		$('#hsp_result_table th:nth-child('+(1*index+1)+')').hide();
	}
}

function check_display() {
	i=1;
	$('#show_columns td').each(function() {
		if (!$(this).children()[0].checked){ toggle_hsp_column(i);}
		i++;
	});
}

function save_display_settings() {
	var i=1;
	var index;
	$(".hsp_display").each(function(){
		if($(this)[0].checked) {
			if (index) {index= index +","+i;}
			else {index = i;}
		}
		i++;
	});
	//save_settings_cogeblast(['args__display','args__'+index],[]);
	$.ajax({
		data: {
			jquery_ajax: 1,
			fname: 'save_settings',
			display: index,
		},
		success: function() {
			$('#table_opts_dialog').dialog('close');
		}
	});
}

function wait_to_search (search_func, search_term) {
	if (!search_term || search_term.length > 2) {
		pageObj.search_term = search_term;

		if (pageObj.time) {
			clearTimeout(pageObj.time);
		}

		pageObj.time = setTimeout(
			function() {
				search_func(pageObj.search_term);
			},
			500
		);
	}
}

function toggle_display(button_obj, target_id) {
	var label = $(button_obj).html();

	if (label == 'hide') {
		$(button_obj).html('show');
		$('#'+target_id).slideUp('fast');
	}
	else {
		$(button_obj).html('hide');
		$('#'+target_id).slideDown('fast');
	}
}

function toggle_title(id, full, partial) {
	var obj = $('#'+id);
	var label = $(obj).html();

	if (label == full) {
		$(obj).html(partial);
	}
	else {
		$(obj).html(full);
	}
}

</SCRIPT>
<tmpl_if name="BETA">
    <div class="small" style="padding-bottom: 5px; color: dimgray;">
        <span class="large">Welcome to the <span class="alert">new beta version</span> of CoGeBlast.</span><br>If you experience any difficulties
        or prefer to use the old version, please <a id="beta_link" href="CoGeBlast_old.pl">click here</a>.
        <br>
    </div>
</tmpl_if>
  <div id="table_opts_dialog" class="dialog_box hidden" title="Table Information Options">
    <table id="show_columns" class="small ui-widget-content ui-corner-all" style="padding:5px;">
      <tr>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(1);" <TMPL_VAR NAME="QND">>Query Sequence Name</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(2);" <TMPL_VAR NAME="OrgD">>Organism Name</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(3);" <TMPL_VAR NAME="ChrD">>Chromosome</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(4);" <TMPL_VAR NAME="PosD">>Position</td>
      </tr>
      <tr>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(5);" <TMPL_VAR NAME="NumD">>HSP Number</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(6);" <TMPL_VAR NAME="LengthD">>HSP Length</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(7);" <TMPL_VAR NAME="QSCD">>Query Sequence Coverage</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(8);" <TMPL_VAR NAME="EvalD">>HSP E-value</td>
      </tr>
      <tr>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(9);" <TMPL_VAR NAME="PIDD">>HSP Percent Identity</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(10);" <TMPL_VAR NAME="ScoreD">>HSP Score</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(11);" <TMPL_VAR NAME="QualD">>HSP Quality (query coverage * percent ID)</td>
        <td><input class="hsp_display" type='checkbox' onclick="toggle_hsp_column(12);" <TMPL_VAR NAME="FeatD">>Closest Genomic Feature</td>
      </tr>
      <tr>
        <td><input class="hsp_display" type=checkbox onclick="toggle_hsp_column(13);"<TMPL_VAR NAME="DistD">>Distance to Closest Feature</td>
        <td><input class="hsp_display" type=checkbox onclick="toggle_hsp_column(14);"<TMPL_VAR NAME="SeqViewD">>Link to SeqView for HSP Sequence</td>
      </tr>
      <TMPL_IF NAME="SAVE_DISPLAY">
      </TMPL_IF> <!-- SAVE_DISPLAY -->
    </table> <!-- show_columns -->
    <br>
    <span class='ui-button ui-corner-all' onclick="save_display_settings()">Save Display Settings</span>
  </div> <!-- table_opts_dialog -->

  <div id="big_picture" title="Enlarged Image of HSP Hits" class="dialog_box hidden"></div>

  <div id="sequence_popup" class="dialog_box hidden" title="Sequence Information"></div>


  <div id="feature_info_popup" class="dialog_box hidden" title="Feature Information">
    <span class="loading">Loading...</span>
  </div>

  <div id='result_visual_popup' class="dialog_box hidden" title="HSP Information">
    <div id="query_image" class="hsp_image"></div>
    <div id="subject_image" class="hsp_image"></div>
    <div id="image_info">
      <TMPL_VAR NAME="HSP">
    </div>
  </div>

  <div id='tabs' class="hidden" style='margin-top: 0.5em'>
    <ul>
      <li class='small'><a href="#tab-1" onclick="adjust_blast_types()">CoGe Blast</a></li>
      <li class='small'><a href="#tab-2" onclick="adjust_blast_types(1)">NCBI Blast</a></li>
    </ul>
    <div id="tab-1">
      <TMPL_INCLUDE NAME='CoGeBlast_coge.tmpl'>
    </div>
    <div id="tab-2">
      <TMPL_INCLUDE NAME='CoGeBlast_ncbi.tmpl'>
    </div>
  </div> <!-- tabs -->

  <table class="ui-corner-all ui-widget-content">
    <thead align="left">
      <th style="text-align:left;font-size:1em;"><b>Query Sequence(s)</b></th>
    </thead>
    <tbody>
      <tr align="left" valign="top">
        <td>
          <textarea id="seq_box" name="seq_box" style='color:gray;' class="ui-corner-all ui-widget-content" spellcheck='false' wrap="off" cols="80"
          placeholder="<TMPL_VAR NAME="SEQUENCE">" rows="15"></textarea>
        </td>
      </tr>
    </tbody>
  </table>
</TMPL_IF> <!-- MAIN -->



<TMPL_IF NAME="BLAST_NU">
  <th align="left" valign="top">Nucleotide Specific Parameters
    <br>
    <TABLE class="ui-corner-all ui-widget-content small">
      <TR>
        <TD valign="top">Match/Mismatch Scores:</TD>
        <TD>
          <select id="match_score" name="match_score" onchange="update_gapcost()">
            <option selected="selected" value="1,-2">1,-2</option>
            <option value="1,-3">1,-3</option>
            <option value="1,-4">1,-4</option>
            <option value="2,-3">2,-3</option>
            <option value="4,-5">4,-5</option>
            <option value="1,-1">1,-1</option>
          </select>
        </TD>
      </TR>
    </TABLE>
  </th>
</TMPL_IF> <!-- BLAST_NU -->



<TMPL_IF NAME="BLAST_PRO">
  <TH align="left" valign="top">Protein Specific Parameters
    <br>
    <TABLE class="ui-corner-all ui-widget-content small">
      <TR>
        <TD valign="top">Matrix:</TD>
        <TD>
          <select name="matrix" id="matrix" onChange="update_gapcost(1)">
            <option value="PAM30">PAM30</option>
            <option value="PAM70">PAM70</option>
            <option value="BLOSUM80">BLOSUM80</option>
            <option value="BLOSUM62" selected>BLOSUM62</option>
            <option value="BLOSUM45">BLOSUM45</option>
          </select>
          <span onclick="matrix_view();" class="link small" style="padding-left:7px;">View Matrix</span>
        </TD>
      </TR>
      <TMPL_IF NAME="BLAST_PRO_COMP">
      <TR>
        <TD>Compositional adjustments:</TD>
        <TD>
          <select name="comp_adj" id="comp_adj">
            <option value="0">No adjustment</option>
            <option value="1" selected>Composition-based statistics</option>
            <option value="2">Conditional compositional score matrix adjustment</option>
            <option value="3">Universal compositional score matrix adjustment</option>
          </select>
        </TD>
      </TR>
      </TMPL_IF> <!-- BLAST_PRO_COMP -->
    </TABLE>
  </TH>
</TMPL_IF> <!-- BLAST_PRO -->



<TMPL_IF NAME="NCBI_BLAST_NU">
  <TH align="left" valign="top">Nucleotide Specific Parameters
    <br>
    <TABLE class='ui-widget-content ui-corner-all small'>
      <TR>
        <TD valign="top">Match/Mismatch Scores:</TD>
        <TD>
          <select id="ncbi_match_score" name="ncbi_match_score" onchange="update_gapcost_ncbi()">
            <option selected="selected" value="1,-2">1,-2</option>
            <option value="1,-3">1,-3</option>
            <option value="1,-4">1,-4</option>
            <option value="2,-3">2,-3</option>
            <option value="4,-5">4,-5</option>
            <option value="1,-1">1,-1</option>
          </select>
        </TD>
      </TR>
    </TABLE>
  </TH>
</TMPL_IF> <!-- NCBI_BLAST_NU -->



<TMPL_IF NAME="NCBI_BLAST_PRO">
  <TH align="left" valign="top">Protein Specific Parameters
    <br>
    <TABLE class='ui-widget-content ui-corner-all small'>
      <TR>
        <TD valign="top">Matrix</TD>
        <TD>
          <select name="ncbi_matrix" id="ncbi_matrix" onChange="update_gapcost_ncbi(1)">
            <option value="PAM30">PAM30</option>
            <option value="PAM70">PAM70</option>
            <option value="BLOSUM80">BLOSUM80</option>
            <option value="BLOSUM62" selected>BLOSUM62</option>
            <option value="BLOSUM45">BLOSUM45</option>
          </select>
        </TD>
      </TR>
      <TMPL_IF NAME=NCBI_BLAST_PRO_COMP>
      <TR>
        <TD>Compositional adjustments</TD>
        <TD>
          <select name=ncbi_comp_adj id=ncbi_comp_adj>
            <option value="0">No adjustment</option>
            <option value="1" selected>Composition-based statistics</option>
            <option value="2">Conditional compositional score matrix adjustment</option>
            <option value="3">Universal compositional score matrix adjustment</option>
          </select>
        </td>
      </TR>
      </TMPL_IF> <!-- NCBI_BLAST_PRO_COMP -->
    </TABLE>
  </TH>
</TMPL_IF> <!-- NCBI_BLAST_PRO -->



<TMPL_IF NAME="NU_DB">
  <select name="ncbi_db" id="ncbi_db">
    <optgroup label="Genomic plus Transcript">
      <option value="Test/gpipe/9606/allcontig_and_rna">Human genomic plus transcript</option>
      <option value="Test/gpipe/10090/allcontig_and_rna">Mouse genomic plus transcript</option>
    </optgroup>
    <optgroup label="Other Databases">
      <option value="nr" selected>Nucleotide collection (nr/nt)</option>
      <option value="refseq_rna">Reference mRNA sequences (refseq_rna)</option>
      <option value="refseq_genomic">Reference genomic sequences (refseq_genomic)</option>
      <option value="est">Expressed sequence tags (est)</option>
      <option value="est_others">Non-human, non-mouse ESTs (est_others)</option>
      <option value="gss">Genomic survey sequences (gss)</option>
      <option value="htgs">High throughput genomic sequences (HTGS)</option>
      <option value="pat">Patent sequences (pat)</option>
      <option value="pdb">Protein Data Bank (pdb)</option>
      <option value="alu">Human ALU repeat elements (alu_repeat)</option>
      <option value="dbsts">Sequence tagged sites (dbsts)</option>
      <option value="wgs">Whole-genome shotgun reads (wgs)</option>
      <option value="env_nt">Environmental samples (env_nt)</option>
    </optgroup>
  </select>
</TMPL_IF> <!-- NU_DB -->



<TMPL_IF NAME="PRO_DB">
  <select name="blast_db" id="blast_db">
    <option value="nr" selected>Non-redundant protein sequences (nr)</option>
    <option value="refseq_protein">Reference proteins (refseq_protein)</option>
    <option value="swissprot">Swissprot protein sequences(swissprot)</option>
    <option value="pat">Patented protein sequences(pat)</option>
    <option value="pdb">Protein Data Bank proteins(pdb)</option>
    <option value="env_nr">Environmental samples(env_nr)</option>
  </select>
</TMPL_IF> <!-- PRO_DB -->



<TMPL_IF NAME="T_DB">
  <select name="blast_db" id="blast_db">
    <option value="nr" selected>Nucleotide collection (nr/nt)</option>
    <option value="refseq_rna">Reference mRNA sequences (refseq_rna)</option>
    <option value="refseq_genomic">Reference genomic sequences (refseq_genomic)</option>
    <option value="est">Expressed sequence tags (est)</option>
    <option value="est_others">Non-human, non-mouse ESTs (est_others)</option>
    <option value="gss">Genomic survey sequences (gss)</option>
    <option value="htgs">High throughput genomic sequences (HTGS)</option>
    <option value="pat">Patent sequences(pat)</option>
    <option value="pdb">Protein Data Bank (pdb)</option>
    <option value="alu">Human ALU repeat elements (alu_repeats)</option>
    <option value="dbsts">Sequence tagged sites (dbsts)</option>
    <option value="wgs">Whole-genome shotgun reads (wgs)</option>
    <option value="env_nt">Environmental samples (env_nt)</option>
  </select>
</TMPL_IF> <!-- T_DB -->



<TMPL_IF NAME="RESULT_TABLE">
  <span href="javascript:void(0)" id="table_opts" class='ui-button ui-button-icon-left ui-corner-all'><span class="ui-icon ui-icon-newwin"></span>Change Viewable Columns</span>
  <span class="small" style="font-style:italic;color:gray;padding-left:15px;">Click column headers to sort</span>
  <div id="table_size">
    <div id="null"><TMPL_VAR NAME="NULLIFY"></div>
    <TMPL_IF NAME="HSP_TABLE">
      <TABLE id="hsp_result_table" cellspacing="2" class="ui-widget-content ui-corner-all">
        <!--<caption>HSPs w/o overlapping features:</caption>-->
        <THEAD>
          <TR nowrap align="middle">
            <TH nowrap class="small"></TH>
            <TH nowrap class="header">Query Seq</TH>
            <TH nowrap class="header">Org</TH>
            <TH nowrap class="header">Chr</TH>
            <TH nowrap class="header">Position</TH>
            <TH nowrap class="header">HSP#</TH>
            <TH nowrap class="header">Length</TH>
            <TH class="header">Coverage</TH>
            <TH nowrap class="header">E-value</TH>
            <TH nowrap class="header">Perc ID</TH>
            <TH nowrap class="header">Score</TH>
            <TH nowrap class="header">Quality</TH>
            <TH class="header">Closest Genomic Feature </TH>
            <TH class="header">Distance to Genomic Feature (bp) </TH>
            <TH nowrap class="header">HSP Sequence </TH>
            <TH style="display:none;">Location</TH>
          </TR>
        </THEAD>
        <TBODY id="hsp_result_table_body" style="overflow-y: auto;overflow-x: hidden;">
          <TMPL_LOOP NAME="HSPS">
            <tr class="feat" id="<TMPL_VAR NAME=ID>">
              <td align="right" id="checkbox<TMPL_VAR NAME=CHECKBOX>">
                <input type="checkbox" id="<TMPL_VAR NAME=CHECKBOX>" value="<TMPL_VAR NAME=CHECKBOX>">
              </td>
              <td><TMPL_VAR NAME=QUERY_SEQ></td>
              <td style="white-space:nowrap;"><TMPL_VAR NAME=HSP_ORG></td>
              <td><TMPL_VAR NAME=HSP_CHR></td>
              <td><TMPL_VAR NAME=HSP_POS_START></td>
              <td><TMPL_VAR NAME=HSP></td>
              <td><TMPL_VAR NAME=HSP_LENGTH></td>
              <td><TMPL_VAR NAME=COVERAGE></td>
              <td><TMPL_VAR NAME=HSP_EVAL></td>
              <td><TMPL_VAR NAME=HSP_PID></td>
              <td><TMPL_VAR NAME=HSP_SCORE></td>
              <td><TMPL_VAR NAME=HSP_QUALITY></td>
              <td style="white-space:nowrap;">
                <div id="feat<TMPL_VAR NAME=ID>">
                  <TMPL_VAR NAME=HSP_LINK>
                </div>
              </td>
              <td>
                <div id="dist<TMPL_VAR NAME=ID>">-</div>
              </td>
              <td><TMPL_VAR NAME=SEQVIEW></td>
              <td class="location" style="display:none"><TMPL_VAR NAME=LOC_VAL></td>
            </tr>
          </TMPL_LOOP>
        </tbody>
      </table>
    </TMPL_IF> <!-- HSP_TABLE -->
  </div> <!-- table_size -->
</TMPL_IF> <!-- RESULT_TABLE -->



<TMPL_IF NAME="CHROMOSOMES_IF">
  <table>
    <TMPL_LOOP NAME="CHROMOSOME_LOOP">
      <tr>
        <Td>
          <div <TMPL_VAR NAME="div_STYLE">>
            <TMPL_VAR NAME="DB_NAME">
              <TMPL_VAR NAME="ENLARGE">
          </div>
          <TMPL_VAR NAME="CHR_IMAGE">
    </TMPL_LOOP>
  </table>
</TMPL_IF> <!-- CHROMOSOMES_IF -->



<TMPL_IF NAME="CHROMOSOMES_LARGE_IF">
  <TMPL_LOOP NAME="CHROMOSOME_LOOP_LARGE">
    <div id=large_db<TMPL_VAR NAME=IMAGE_ID_LARGE> style="display:none">
      <TMPL_VAR NAME="DB_NAME_LARGE">
    </div>
    <div id=large_pic<TMPL_VAR NAME=IMAGE_ID_LARGE> style="display:none">
      <TMPL_VAR NAME="CHR_IMAGE_LARGE">
    </div>
  </TMPL_LOOP>
</TMPL_IF> <!-- CHROMOSOMES_LARGE_IF -->



<TMPL_IF NAME="HSP_IF">
  <span class="species">HSP Number <TMPL_VAR NAME="HSP_NUM"> Information:</span>
  <br>
  <TABLE id="hsp_table" class="ui-widget-content ui-corner-all" style="width: 400px; overflow: auto;" cellspacing="2">
    <tr>
      <td valign="top">
        <table>
          <THEAD>
            <TR>
              <TH></TH>
              <TH class="header">Query</TH>
              <TH class="header">Subject</TH>
            </TR>
          </THEAD>
          <TBODY style="font-size: 10pt;">
            <TMPL_LOOP NAME=HSP_QS>
              <!--onmouseover="$('#table_row<TMPL_VAR NAME=FID>').addClass('highlight_tablerows');" onmouseout="$('#table_row<TMPL_VAR NAME=FID>').removeClass('highlight_tablerows');"-->
              <tr>
                <TD>Perc ID</TD>
                <TD><TMPL_VAR NAME=HSP_PID_QUERY></TD>
                <TD><TMPL_VAR NAME=HSP_PID_SUB></TD>
              </tr>
              <tr>
                <TD>Perc Sim</TD>
                <TD><TMPL_VAR NAME=HSP_PSIM_QUERY></TD>
                <TD><TMPL_VAR NAME=HSP_PSIM_SUB></TD>
              </tr>
              <tr>
                <TD>Match</TD>
                <TD><TMPL_VAR NAME=HSP_MATCH_QUERY></TD>
                <TD><TMPL_VAR NAME=HSP_MATCH_SUB></TD>
              </tr>
              <tr>
                <TD>Mismatch</TD>
                <TD><TMPL_VAR NAME=HSP_MISMATCH_QUERY></TD>
                <TD><TMPL_VAR NAME=HSP_MISMATCH_SUB></TD>
              </tr>
              <tr>
                <TD>Gap</TD>
                <TD><TMPL_VAR NAME=HSP_GAP_QUERY></TD>
                <TD><TMPL_VAR NAME=HSP_GAP_SUB></TD>
              </tr>
              <tr>
                <TD>Position</TD>
                <TD><TMPL_VAR NAME=HSP_POSITION_QUERY></TD>
                <TD><TMPL_VAR NAME=HSP_POSITION_SUB></TD>
              </tr>
              <tr>
          </TBODY>
          </TMPL_LOOP>
        </table>
      </TD>
      <TD valign="top">
        <table>
          <THEAD>
            <TR>
              <TH></TH>
              <TH class="header">HSP</TH>
            </TR>
          </THEAD>
          <TMPL_LOOP NAME=HSP_HSP>
            <TBODY style="font-size: 10pt;">
              <tr>
                <TD>E-Value</TD>
                <TD><TMPL_VAR NAME=HSP_EVAL></TD>
              </tr>
              <tr>
                <TD>Score</TD>
                <TD><TMPL_VAR NAME=HSP_SCORE></TD>
              </tr>
              <tr>
                <TD>Strand</TD>
                <TD><TMPL_VAR NAME=HSP_STRAND></TD>
              </tr>
              <tr>
                <TD>Length</TD>
                <TD><TMPL_VAR NAME=HSP_LENGTH></TD>
              </tr>
              <tr>
                <TD>Chromosome</TD>
                <TD><TMPL_VAR NAME=HSP_CHR></TD>
              </tr>
            </TBODY>
          </TMPL_LOOP>
        </table>
    </TR>
  </TABLE>
  <br>
  <table width="100%">
    <tr>
      <td><TMPL_VAR NAME="QUERY_SEQ"></td>
      <td><TMPL_VAR NAME="SUB_SEQ"></td>
      <td><TMPL_VAR NAME="ALIGNMENT"></td>
    </tr>
  </table>
  <TMPL VAR NAME="HSP_EXCEL_LINK">
</TMPL_IF>



<TMPL_IF NAME="BLAST_RESULTS">
  <TABLE class="ui-widget-content ui-corner-all">
    <thead align="left">
      <th>
        <span id="genomic_title" style="font-weight:bold;">Genomic HSP Visualization</span>
        <span class='small link' style="font-weight:normal;padding-right:15px;" onClick="toggle_display(this, 'left_column');toggle_title('genomic_title', 'Genomic HSP Visualization','Gen...');">hide</span>
      </th>
      <th>
        <span id="result_toggle">
          <span style="font-weight:bold;">HSP Table</span>
          <span class='small link' style="font-weight:normal;padding-right:15px;" onClick="toggle_display(this, 'result_features');">hide</span>
        </span>
      </th>
    </thead>
    <tbody>
      <TR>
        <TD align="left" valign="top">
          <div id="left_column">
            <div class="small">
              <span class="link" onclick="window.open('<TMPL_VAR NAME=GENOMELIST_LINK>')">Generate List of Matching Genomes
            </div>
            <div id="chromosomes" class="ui-widget-content ui-corner-all" style="width: 405px;overflow: auto;max-height: 700px;">
            <TMPL_VAR NAME=CHROMOSOMES>
            <TMPL_VAR NAME=CHR_LARGE>
          </div>
          <TMPL_VAR NAME="DATA_FILES">
        </TD>
        <TD valign="top" align="left" >
       	  <div id="result_features" align="left" valign="top">
            <TMPL_VAR NAME="HSP_RESULTS">
            <div>
              <span class='ui-button ui-button-icon-left ui-corner-all' onClick="$('#hsp_result_table :checkbox').attr('checked', true);"><span class="ui-icon ui-icon-check"></span>Select All</span>
              <span class='ui-button ui-button-icon-left ui-corner-all' onClick="$('#hsp_result_table :checkbox').attr('checked', false);"><span class="ui-icon ui-icon-minusthick"></span>Select None</span>
              <span class='small'>Send selected to:</span>
              <select name="overlap_action" id="overlap_action">
                <option value="gevo">GEvo</option>
                <option value="fasta">Fasta View</option>
                <option value="seqview">Sequence View</option>
                <option value="xls">Excel File</option>
                <option value="tab">Tab Delimited FIle</option>
                <option value="list">Feature List</option>
                <option value="blast">CoGeBlast</option>
                <option value="phylo">Phylogenetics</option>
                <option value="CodeOn">Coding Evolution</option>
              </select>
              <span class='ui-button ui-corner-all' onClick="overlap_checkboxes();">Go</span>
            </div>
            <div style='padding:15px;'>
              <span style="font-weight:bold;">HSP count</span>
              <span class="small link" onclick="toggle_display(this, 'hsp_count_data');">show</span>
              <div id="hsp_count_data" style="display:none;">
                <TMPL_VAR NAME="HSP_COUNT">
              </div>
            </div>
          </div>
        </TD>
      </tr>
    </tbody>
  </TABLE>
</TMPL_IF>



<TMPL_IF NAME="RESULTS_div">
<div align='left'>
  <div id="log_text" class='dna small' style="display:none;height:175px;overflow:auto;"></div>
  <div id="blast_results" style="display:none;"></div>
</div>
</TMPL_IF>
